// Danh s√°ch c√¢u h·ªèi m·∫´u, b·∫°n c√≥ th·ªÉ th√™m/b·ªõt t√πy √Ω
const questions = [
  {
    question: "Th·ªß ƒë√¥ c·ªßa Vi·ªát Nam l√† g√¨?",
    options: ["H√† N·ªôi", "H·ªì Ch√≠ Minh", "ƒê√† N·∫µng", "Hu·∫ø"],
    answer: 0
  },
  {
    question: "2 + 2 = ?",
    options: ["3", "4", "5", "6"],
    answer: 1
  },
  {
    question: "M√†u n√†o l√† m√†u c·ªßa l√° c√¢y?",
    options: ["ƒê·ªè", "V√†ng", "Xanh l√°", "T√≠m"],
    answer: 2
  },
  {
    question: "S√¥ng n√†o d√†i nh·∫•t Vi·ªát Nam?",
    options: ["S√¥ng H·ªìng", "S√¥ng Mekong", "S√¥ng ƒê√†", "S√¥ng ƒê·ªìng Nai"],
    answer: 1
  },
  {
    question: "Ai l√† t√°c gi·∫£ Truy·ªán Ki·ªÅu?",
    options: ["Nguy·ªÖn Du", "Nguy·ªÖn Tr√£i", "H·ªì Xu√¢n H∆∞∆°ng", "T·ªë H·ªØu"],
    answer: 0
  },
  {
    question: "H√¨nh n√†o l√† h√¨nh tam gi√°c?",
    options: ["‚ö´", "‚¨õ", "üî∫", "‚¨ú"],
    answer: 2
  },
  {
    question: "Th√°ng c√≥ s·ªë ng√†y √≠t nh·∫•t trong nƒÉm?",
    options: ["Th√°ng 2", "Th√°ng 4", "Th√°ng 6", "Th√°ng 9"],
    answer: 0
  },
  {
    question: "Qu·ªëc gia n√†o l·ªõn nh·∫•t th·∫ø gi·ªõi?",
    options: ["Trung Qu·ªëc", "M·ªπ", "Nga", "Canada"],
    answer: 2
  },
  {
    question: "Ch·ªØ c√°i ƒë·∫ßu ti√™n trong b·∫£ng ch·ªØ c√°i ti·∫øng Vi·ªát?",
    options: ["A", "ƒÇ", "√Ç", "B"],
    answer: 0
  },
  {
    question: "Bi·ªÉn n√†o l·ªõn nh·∫•t Vi·ªát Nam?",
    options: ["Bi·ªÉn ƒê√¥ng", "Bi·ªÉn ƒêen", "Bi·ªÉn ƒê·ªè", "Bi·ªÉn Nh·∫≠t B·∫£n"],
    answer: 0
  }
];

// H√†m ƒë·∫£o th·ª© t·ª± m·∫£ng (Fisher-Yates)
function shuffle(array) {
  for (let i = array.length - 1; i &gt; 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}

let selectedQuestions = [];
let userAnswers = [];

function startQuiz() {
  const num = parseInt(document.getElementById('numQuestions').value);
  if (isNaN(num) || num &lt; 1 || num &gt; questions.length) {
    alert(`Vui l√≤ng ch·ªçn s·ªë l∆∞·ª£ng c√¢u h·ªèi t·ª´ 1 ƒë·∫øn ${questions.length}`);
    return;
  }
  selectedQuestions = [...questions];
  shuffle(selectedQuestions);
  selectedQuestions = selectedQuestions.slice(0, num);

  // ƒê·∫£o th·ª© t·ª± ƒë√°p √°n t·ª´ng c√¢u
  selectedQuestions.forEach(q =&gt; {
    const correct = q.options[q.answer];
    shuffle(q.options);
    q.answer = q.options.indexOf(correct);
  });

  userAnswers = Array(num).fill(null);
  renderQuiz();
  document.getElementById('result').innerHTML = '';
}

function renderQuiz() {
  const container = document.getElementById('quizContainer');
  container.innerHTML = '';
  selectedQuestions.forEach((q, idx) =&gt; {
    let html = `<div><b>C√¢u ${idx + 1}: ${q.question}</b><br>`;
    q.options.forEach((opt, oidx) =&gt; {
      html += `<label>
        <input value="${oidx}" name="q${idx}" type="radio">
        ${opt}
      </label><br>`;
    });
    html += '</div><hr>';
    container.innerHTML += html;
  });
  container.innerHTML += `<button>N·ªôp b√†i</button>`;
}

function selectAnswer(qIdx, oIdx) {
  userAnswers[qIdx] = oIdx;
}

function submitQuiz() {
  let score = 0;
  selectedQuestions.forEach((q, idx) =&gt; {
    if (userAnswers[idx] === q.answer) score++;
  });
  document.getElementById('result').innerHTML = `B·∫°n ƒë√∫ng ${score}/${selectedQuestions.length} c√¢u!`;
}

// G√°n c√°c h√†m v√†o window ƒë·ªÉ g·ªçi ƒë∆∞·ª£c t·ª´ HTML
window.startQuiz = startQuiz;
window.selectAnswer = selectAnswer;
window.submitQuiz = submitQuiz;
